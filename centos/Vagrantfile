# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.env.enable

  #config.vm.box = "centos/7"
  config.vm.box = ENV['VM_BOX']
  #config.vm.hostname = "baselinux"
  config.vm.hostname = ENV['VM_HOSTNAME']

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  if Vagrant.has_plugin?("vagrant-timezone")
    config.timezone.value = ENV['VM_TIMEZONE']
  end

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  #config.vm.network "private_network", ip: "192.168.56.200", virtualbox__intnet: true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.name = ENV['VB_NAME']
    vb.gui = false
    #vb.memory = ENV['VB_RAM']
    vb.cpus = ENV['VB_CPU']
    #config.vm.network "private_network", ip: "192.168.56.200", :name => 'VirtualBox Host-Only Ethernet Adapter', :adapter => 2
    config.vm.network "private_network", ip: ENV['VB_IPADDRESS'], :name => 'VirtualBox Host-Only Ethernet Adapter', :adapter => 2
    vb.customize [
      "modifyvm", :id,
      "--cpuexecutioncap", "50",
      "--memory", ENV['VB_RAM'],
    ]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    sudo yum makecache fast
    sudo hostnamectl set-hostname baselinux
  SHELL
end
